MongoStore {
  _events: [Object: null prototype] { create: [Function (anonymous)] },
  _eventsCount: 1,
  _maxListeners: undefined,
  crypto: Kruptein {
    crypto: {
      checkPrime: [Function: checkPrime],
      checkPrimeSync: [Function: checkPrimeSync],
      createCipheriv: [Function: createCipheriv],
      createDecipheriv: [Function: createDecipheriv],
      createDiffieHellman: [Function: createDiffieHellman],
      createDiffieHellmanGroup: [Function: createDiffieHellmanGroup],
      createECDH: [Function: createECDH],
      createHash: [Function: createHash],
      createHmac: [Function: createHmac],
      createPrivateKey: [Function: createPrivateKey],
      createPublicKey: [Function: createPublicKey],
      createSecretKey: [Function: createSecretKey],
      createSign: [Function: createSign],
      createVerify: [Function: createVerify],
      diffieHellman: [Function: diffieHellman],
      generatePrime: [Function: generatePrime],
      generatePrimeSync: [Function: generatePrimeSync],
      getCiphers: [Function (anonymous)],
      getCipherInfo: [Function: getCipherInfo],
      getCurves: [Function (anonymous)],
      getDiffieHellman: [Function: createDiffieHellmanGroup],
      getHashes: [Function (anonymous)],
      hkdf: [Function: hkdf],
      hkdfSync: [Function: hkdfSync],
      pbkdf2: [Function: pbkdf2],
      pbkdf2Sync: [Function: pbkdf2Sync],
      generateKeyPair: [Function: generateKeyPair],
      generateKeyPairSync: [Function: generateKeyPairSync],
      generateKey: [Function: generateKey],
      generateKeySync: [Function: generateKeySync],
      privateDecrypt: [Function (anonymous)],
      privateEncrypt: [Function (anonymous)],
      publicDecrypt: [Function (anonymous)],
      publicEncrypt: [Function (anonymous)],
      randomBytes: [Function: randomBytes],
      randomFill: [Function: randomFill],
      randomFillSync: [Function: randomFillSync],
      randomInt: [Function: randomInt],
      randomUUID: [Function: randomUUID],
      scrypt: [Function: scrypt],
      scryptSync: [Function: scryptSync],
      sign: [Function: signOneShot],
      setEngine: [Function: setEngine],
      timingSafeEqual: [Function: timingSafeEqual],
      getFips: [Function: getFipsCrypto],
      setFips: [Function: setFipsCrypto],
      verify: [Function: verifyOneShot],
      Certificate: [Function],
      Cipher: [Function: Cipher],
      Cipheriv: [Function: Cipheriv],
      Decipher: [Function: Decipher],
      Decipheriv: [Function: Decipheriv],
      DiffieHellman: [Function: DiffieHellman],
      DiffieHellmanGroup: [Function: DiffieHellmanGroup],
      ECDH: [Function],
      Hash: [Function: Hash],
      Hmac: [Function: Hmac],
      KeyObject: [class KeyObject],
      Sign: [Function: Sign],
      Verify: [Function: Verify],
      X509Certificate: [class X509Certificate extends JSTransferable],
      secureHeapUsed: [Function: secureHeapUsed],
      constants: [Object: null prototype],
      webcrypto: [Getter]
    },
    _algorithm: 'aes-256-gcm',
    _hashing: 'sha512WithRSAEncryption',
    _encodeas: 'hex',
    _use_asn1: true,
    _aead_mode: true,
    _at_size: 16,
    _iv_size: 12,
    _key_size: 32,
    _use_scrypt: false,
    asn1: {
      bignum: [Function],
      define: [Function: define],
      base: [Object],
      constants: [Object],
      decoders: [Object],
      encoders: [Object]
    },
    schema: Entity {
      name: 'schema',
      body: [Function (anonymous)],
      decoders: {},
      encoders: {}
    }
  },
  transformFunctions: {
    serialize: [Function: defaultSerializeFunction],
    unserialize: [Function: unit]
  },
  clientP: Promise { <pending> },
  options: {
    collectionName: 'session_store',
    ttl: 1209600,
    mongoOptions: { ssl: true, sslCert: 'local_cert.pem', sslKey: 'local_key.pem' },
    autoRemove: 'native',
    autoRemoveInterval: 10,
    touchAfter: 0,
    stringify: false,
    crypto: {
      secret: '185hjt9iapgbniu9q0934t53noiyiamvndknbhprtgioweotip43jn138ht58ptg',
      algorithm: 'aes-256-gcm',
      hashing: 'sha512WithRSAEncryption',
      encodeas: 'hex',
      key_size: '32',
      iv_size: '16',
      at_size: '16'
    },
    mongoUrl: 'mongodb+srv://vexgate-api-backend:YPMF5wtsKK37x114YTPDdFuB3dDznwR5rFj@fastify-backend-serverl.r21jk.mongodb.net/?retryWrites=true&w=majority',
    dbName: 'sessions'
  },
  collectionP: Promise { <pending> },
  [Symbol(kCapture)]: false
}
{"level":30,"time":1668120531194,"pid":4536,"hostname":"Hyperagon","msg":"Server listening at https://127.0.0.1:3000"}
{"level":30,"time":1668120532928,"pid":4536,"hostname":"Hyperagon","reqId":"req-1","req":{"method":"GET","url":"/","hostname":"127.0.0.1:3000","remoteAddress":"127.0.0.1","remotePort":60762},"msg":"incoming request"}
{"level":30,"time":1668120533070,"pid":4536,"hostname":"Hyperagon","reqId":"req-1","res":{"statusCode":200},"responseTime":141.47702099988237,"msg":"request completed"}
